---
firewall:
  filter:
    - name: http
      dst_port: 80
    - name: https
      dst_port: 443
    - name: example with incoming access from a specific address
      src_address: 127.0.0.1
    - name: example with incoming access from multiple addresses
      src_address:
        - 127.0.0.1
        - 127.0.0.2
    - name: example with incoming access from a specific address to a specific port
      src_address: 127.0.0.1
      dst_port: 80
    - name: example with incoming access from multiple addresses to a specific port
      src_address:
        - 127.0.0.1
        - 127.0.0.2
      dst_port: 80
    - name: example with outgoing access from a specific user to a specific port
      dst_port: 80
      direction: out
      uid: 1500
    - name: example with outgoing access from a specific group to a specific port
      dst_port: 80
      direction: out
      gid: 1500
    - name: example with all default options
      src_address: 127.0.0.1
      dst_port: 80
      protocol: tcp
      direction: in
      policy: allow
      version: 4
    - name: example with incoming access from a specific address and on a specific role
      src_address: 127.0.0.1
      roles:
        - server01.exonetcloud.nl

    # Examples below also require to set `base_facts_xxxx` in the `vars` of the `ansible-role-base`. In the README of the base role you will find the available vars.
    - name: example with incoming access from Github ranges
      src_address: "{{ ansible_local.base.github.ip_ranges }}"
      dst_port: 22
    - name: example with incoming access from Gitlab API/webhooks ranges. If Gitlab CI is needed include base_facts_gcp as well
      src_address: "{{ ansible_local.base.gitlab.ip_ranges }}"
      dst_port: 22
    - name: example with incoming access from Google GCP ranges
      src_address: "{{ ansible_local.base.gcp.ip_ranges }}"
      dst_port: 22
    - name: example with incoming access from Bitbucket ranges
      src_address: "{{ ansible_local.base.bitbucket.ip_ranges }}"
      dst_port: 22
